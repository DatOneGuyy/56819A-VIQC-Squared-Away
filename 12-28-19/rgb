#pragma config(Sensor, port1,  color1,         sensorVexIQ_LED)
#pragma config(Sensor, port2,  gyro,           sensorVexIQ_Gyro)
#pragma config(Sensor, port3,  color2,         sensorVexIQ_LED)
#pragma config(Sensor, port4,  color3,         sensorVexIQ_LED)
#pragma config(Sensor, port6,  color5,         sensorVexIQ_LED)
#pragma config(Sensor, port8,  color4,         sensorVexIQ_LED)
#pragma config(Motor,  motor5,          dropper,       tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor7,          frontarm,      tmotorVexIQ, PIDControl, reversed, encoder)
#pragma config(Motor,  motor9,          spintake,      tmotorVexIQ, PIDControl, reversed, encoder)
#pragma config(Motor,  motor10,         leftdrive,     tmotorVexIQ, PIDControl, reversed, driveLeft, encoder)
#pragma config(Motor,  motor11,         rightdrive,    tmotorVexIQ, PIDControl, driveRight, encoder)
#pragma config(Motor,  motor12,         backarm,       tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int t = 0;
int t_2 = 0;
int cycle = 42;

int leftspeed;
int rightspeed;

bool backarmup = false;

bool previousFramePressed = false;
bool previousFramePressedEUp = false;
bool previousFramePressedEDown = false;

int spintakeState = 0;

int temp;

int sign(int input) {
	return input == 0 ? 0 : abs(input) / input;
}

void color(unsigned short c) {
	setTouchLEDHue(color2, c);
	setTouchLEDHue(color5, c);
	setTouchLEDHue(color4, c);
	setTouchLEDHue(color3, c);
	setTouchLEDHue(color1, c);
}

void setup() {
	setMotorSpeed(dropper, 0);
	setMotorSpeed(frontarm, 0);
	setMotorSpeed(spintake, 0);
	setMotorSpeed(leftdrive, 0);
	setMotorSpeed(rightdrive, 0);
	setMotorSpeed(backarm, 0);
	resetMotorEncoder(dropper);
	resetMotorEncoder(frontarm);
	resetMotorEncoder(spintake);
	resetMotorEncoder(leftdrive);
	resetMotorEncoder(rightdrive);
	resetMotorEncoder(backarm);
	resetGyro(gyro);
}

bool gear = true;

task drop() {
	while (true) {
		if (getJoystickValue(BtnFUp) == 1) {
			setMotorSpeed(dropper, -100);
			sleep(300);
			setMotorSpeed(dropper, 100);
			sleep(300);
			setMotorSpeed(dropper, 10);
		}
	}
}

task rgb() {
	color(0);
	while (true) {
		t++;
		if (t % 10 == 9){
			t_2++;
		}
		color(t_2 % 255);
	}
}

task main() {
	setup();
	startTask(drop);
	startTask(rgb);
	while (true) {
		if (getJoystickValue(BtnLUp) == 1 && getJoystickValue(BtnLDown) == 0) {
			setMotorSpeed(frontarm, 100);
		} else if (getJoystickValue(BtnLDown) == 1 && getJoystickValue(BtnLUp) == 0) {
			setMotorSpeed(frontarm, -100);
		} else {
			setMotorSpeed(frontarm, 0);
		}

		if (getJoystickValue(BtnRUp) == 1 && getJoystickValue(BtnRDown) == 0 && getMotorEncoder(backarm) < 60) {
			setMotorSpeed(backarm, 100);
			backarmup = true;
		} else if (getJoystickValue(BtnRDown) == 1 && getJoystickValue(BtnRUp) == 0 && getMotorEncoder(backarm) > 0) {
			setMotorSpeed(backarm, -100);
			backarmup = false;
		} else {
			setMotorSpeed(backarm, backarmup ? 30 : 0);
		}

		if (getJoystickValue(BtnEDown) == 0 && previousFramePressedEDown) {
			previousFramePressedEDown = false;
		} else if (getJoystickValue(BtnEDown) == 1 && !previousFramePressedEDown) {
			spintakeState--;
			previousFramePressedEDown = true;
		}

		if (getJoystickValue(BtnEUp) == 0 && previousFramePressedEUp) {
			previousFramePressedEUp = false;
		} else if (getJoystickValue(BtnEUp) == 1 && !previousFramePressedEUp) {
			spintakeState++;
			previousFramePressedEUp = true;
		}

		if (getJoystickValue(BtnLUp) == 1 || getJoystickValue(BtnLDown) == 1) {
			spintakeState = 20000;
		}

		if (spintakeState == 20000) {
			spintakeState = 0;
		} else if (spintakeState < -1) {
			spintakeState = -1;
		} else if (spintakeState > 1) {
			spintakeState = 1;
		}

		if (getJoystickValue(BtnFDown) == 0 && previousFramePressed) {
			previousFramePressed = false;
		} else if (getJoystickValue(BtnFDown) == 1 && !previousFramePressed) {
			gear = !gear;
			previousFramePressed = true;
		}

		if (getJoystickValue(BtnFDown) == 0 && previousFramePressed) {
			previousFramePressed = false;
		} else if (getJoystickValue(BtnFDown) == 1 && !previousFramePressed) {
			gear = !gear;
			previousFramePressed = true;
		}

		leftspeed = getJoystickValue(ChA) * getJoystickValue(ChA) * getJoystickValue(ChA) / 10000 * (gear ? 1 : 0.6) * (abs(getJoystickValue(ChA)) > 10 ? 1 : 0);
		rightspeed = getJoystickValue(ChD) * getJoystickValue(ChD) * getJoystickValue(ChD) / 10000 * (gear ? 1 : 0.6) * (abs(getJoystickValue(ChD)) > 10 ? 1 : 0);

		setMotorSpeed(spintake, spintakeState * 100);
		setMotorSpeed(leftdrive, leftspeed);
		setMotorSpeed(rightdrive, rightspeed);
	}
}
