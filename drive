#pragma config(Sensor, port5,  gyro,           sensorVexIQ_Gyro)
#pragma config(Motor,  motor2,          armright,      tmotorVexIQ, PIDControl, reversed, encoder)
#pragma config(Motor,  motor3,          rightdrive,    tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor4,          strafe,        tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor8,          armleft,       tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor9,          leftdrive,     tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor10,         claw,          tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int leftarm = getMotorEncoder(armleft);
int rightarm = getMotorEncoder(armright);

int armlimit = 260;

void setup() {
	resetMotorEncoder(armright);
	resetMotorEncoder(armleft);
	resetMotorEncoder(strafe);
	resetMotorEncoder(rightdrive);
	resetMotorEncoder(leftdrive);
	resetMotorEncoder(claw);
	setGyroSensitivity(gyro, gyroNormalSensitivity);
	resetGyro(gyro);
}

task main() {
	setup();
	while (true) {
		setMotorSpeed(leftdrive, getJoystickValue(ChA));
		setMotorSpeed(rightdrive, getJoystickValue(ChD));
		setMotorSpeed(strafe, 0.5 * getJoystickValue(ChB) + 0.5 * getJoystickValue(ChC));
		
		if (leftarm * 0.5 + rightarm * 0.5 < armlimit && getJoystickValue(BtnRUp) == 1 && getJoystickValue(BtnRDown) == 0) {
			setMotorSpeed(armleft, 100);
			setMotorSpeed(armright, 100);
		} else if (getJoystickValue(BtnRDown) == 1 && getJoystickValue(BtnRUp) == 0) {
			setMotorSpeed(armleft, -100);
			setMotorSpeed(armright, -100);
		} else {
			setMotorSpeed(armleft, 0);
			setMotorSpeed(armright, 0);
		}
		
		if (getJoystickValue(BtnLUp) == 1 && getJoystickValue(BtnLDown) == 0) {
			setMotorSpeed(claw, 100);
		} else if (getJoystickValue(BtnLDown) == 1 && getJoystickValue(BtnLUp) == 0) {
			setMotorSpeed(claw, -100);
		} else {
			setMotorSpeed(claw, 0);
		}
	}
}
